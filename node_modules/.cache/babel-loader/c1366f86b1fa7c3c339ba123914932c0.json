{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar useDeepCompareEffect = _interopDefault(require('use-deep-compare-effect')); // URL for any embedded Explorer iframe\n\n\nvar EMBEDDABLE_EXPLORER_URL = 'https://explorer.embed.apollographql.com';\nvar EXPLORER_LISTENING_FOR_SCHEMA = 'ExplorerListeningForSchema';\nvar SCHEMA_RESPONSE = 'SchemaResponse'; // Message types for queries and mutations\n\nvar EXPLORER_QUERY_MUTATION_REQUEST = 'ExplorerRequest';\nvar EXPLORER_QUERY_MUTATION_RESPONSE = 'ExplorerResponse'; // Message types for subscriptions\n\nvar IFRAME_DOM_ID = function IFRAME_DOM_ID(uniqueId) {\n  return \"apollo-embed-\" + uniqueId;\n}; // Message types for authentication\n\n\nvar EXPLORER_LISTENING_FOR_HANDSHAKE = 'ExplorerListeningForHandshake';\nvar HANDSHAKE_RESPONSE = 'HandshakeResponse';\nvar SET_PARTIAL_AUTHENTICATION_TOKEN_FOR_PARENT = 'SetPartialAuthenticationTokenForParent';\nvar EXPLORER_LISTENING_FOR_PARTIAL_TOKEN = 'ExplorerListeningForPartialToken';\nvar PARTIAL_AUTHENTICATION_TOKEN_RESPONSE = 'PartialAuthenticationTokenResponse';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function (obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function () {\n      return this;\n    });\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = GeneratorFunctionPrototype;\n    define(Gp, \"constructor\", GeneratorFunctionPrototype);\n    define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n    define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n      return this;\n    });\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    define(Gp, iteratorSymbol, function () {\n      return this;\n    });\n    define(Gp, \"toString\", function () {\n      return \"[object Generator]\";\n    });\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined$1;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function (skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function () {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function (exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function (type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function (record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function (finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function (tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function (iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, in modern engines\n    // we can explicitly access globalThis. In older engines we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    if (typeof globalThis === \"object\") {\n      globalThis.regeneratorRuntime = runtime;\n    } else {\n      Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n    }\n  }\n}); // to each request's headers if not present\n\nfunction getHeadersWithContentType(headers) {\n  var headersWithContentType = headers != null ? headers : {};\n\n  if (Object.keys(headersWithContentType).every(function (key) {\n    return key.toLowerCase() !== 'content-type';\n  })) {\n    headersWithContentType['content-type'] = 'application/json';\n  }\n\n  return headersWithContentType;\n}\n\nfunction sendPostMessageToEmbed(_ref) {\n  var _embeddedIFrameElemen;\n\n  var message = _ref.message,\n      embeddedIFrameElement = _ref.embeddedIFrameElement,\n      embedUrl = _ref.embedUrl;\n  embeddedIFrameElement == null ? void 0 : (_embeddedIFrameElemen = embeddedIFrameElement.contentWindow) == null ? void 0 : _embeddedIFrameElemen.postMessage(message, embedUrl);\n} // | MessageEvent<{\n//     name: typeof EXPLORER_LISTENING_FOR_HANDSHAKE;\n//   }>\n// | MessageEvent<{\n//     name: typeof EXPLORER_QUERY_MUTATION_REQUEST;\n//     operationName?: string;\n//     operation: string;\n//     operationId: string;\n//     variables?: Record<string, string>;\n//     headers?: Record<string, string>;\n//     sandboxEndpointUrl?: string;\n//   }>\n// | MessageEvent<{\n//     name: typeof EXPLORER_LISTENING_FOR_SCHEMA;\n//   }>\n// | MessageEvent<{\n//     name: typeof SET_PARTIAL_AUTHENTICATION_TOKEN_FOR_PARENT;\n//     key: string;\n//     partialToken: string;\n//   }>\n// | MessageEvent<{\n//     name: typeof EXPLORER_LISTENING_FOR_PARTIAL_TOKEN;\n//     localStorageKey?: string;\n//   }>\n// | MessageEvent<{\n//     name: typeof INTROSPECTION_QUERY_WITH_HEADERS;\n//     introspectionRequestBody: string;\n//     introspectionRequestHeaders: Record<string, string>;\n//     sandboxEndpointUrl?: string;\n//   }>;\n\n\nfunction executeOperation(_ref2) {\n  var endpointUrl = _ref2.endpointUrl,\n      handleRequest = _ref2.handleRequest,\n      operation = _ref2.operation,\n      operationName = _ref2.operationName,\n      variables = _ref2.variables,\n      headers = _ref2.headers,\n      embeddedIFrameElement = _ref2.embeddedIFrameElement,\n      operationId = _ref2.operationId,\n      embedUrl = _ref2.embedUrl;\n  return handleRequest(endpointUrl, {\n    method: 'POST',\n    headers: getHeadersWithContentType(headers),\n    body: JSON.stringify({\n      query: operation,\n      variables: variables,\n      operationName: operationName\n    })\n  }).then( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(response) {\n      var json, responseHeaders;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return response.json();\n\n            case 2:\n              json = _context.sent;\n              responseHeaders = {};\n              response.headers.forEach(function (value, key) {\n                responseHeaders[key] = value;\n              });\n              sendPostMessageToEmbed({\n                message: {\n                  // Include the same operation ID in the response message's name\n                  // so the Explorer knows which operation it's associated with\n                  name: EXPLORER_QUERY_MUTATION_RESPONSE,\n                  operationId: operationId,\n                  response: _extends({}, json, {\n                    status: response.status,\n                    headers: responseHeaders\n                  })\n                },\n                embeddedIFrameElement: embeddedIFrameElement,\n                embedUrl: embedUrl\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }())[\"catch\"](function (response) {\n    sendPostMessageToEmbed({\n      message: {\n        // Include the same operation ID in the response message's name\n        // so the Explorer knows which operation it's associated with\n        name: EXPLORER_QUERY_MUTATION_RESPONSE,\n        operationId: operationId,\n        response: {\n          error: _extends({\n            message: response.message\n          }, response.stack ? {\n            stack: response.stack\n          } : {})\n        }\n      },\n      embeddedIFrameElement: embeddedIFrameElement,\n      embedUrl: embedUrl\n    });\n  });\n}\n\nfunction setupEmbedRelay(_ref) {\n  var endpointUrl = _ref.endpointUrl,\n      handleRequest = _ref.handleRequest,\n      embeddedExplorerIFrameElement = _ref.embeddedExplorerIFrameElement,\n      updateSchemaInEmbed = _ref.updateSchemaInEmbed,\n      schema = _ref.schema,\n      graphRef = _ref.graphRef,\n      autoInviteOptions = _ref.autoInviteOptions; // Callback definition\n\n  var onPostMessageReceived = function onPostMessageReceived(event) {\n    var data = event.data; // When embed connects, send a handshake message\n\n    if (data.name === EXPLORER_LISTENING_FOR_HANDSHAKE) {\n      sendPostMessageToEmbed({\n        message: {\n          name: HANDSHAKE_RESPONSE,\n          graphRef: graphRef,\n          inviteToken: autoInviteOptions == null ? void 0 : autoInviteOptions.inviteToken,\n          accountId: autoInviteOptions == null ? void 0 : autoInviteOptions.accountId\n        },\n        embeddedIFrameElement: embeddedExplorerIFrameElement,\n        embedUrl: EMBEDDABLE_EXPLORER_URL\n      });\n    } // When the embed authenticates, save the partial token in local storage\n\n\n    if (data.name === SET_PARTIAL_AUTHENTICATION_TOKEN_FOR_PARENT) {\n      var partialEmbedApiKeysString = window.localStorage.getItem('apolloStudioEmbeddedExplorerEncodedApiKey');\n      var partialEmbedApiKeys = partialEmbedApiKeysString ? JSON.parse(partialEmbedApiKeysString) : {};\n      partialEmbedApiKeys[data.localStorageKey] = data.partialToken;\n      window.localStorage.setItem('apolloStudioEmbeddedExplorerEncodedApiKey', JSON.stringify(partialEmbedApiKeys));\n    }\n\n    if (data.name === EXPLORER_LISTENING_FOR_PARTIAL_TOKEN && data.localStorageKey) {\n      var _partialEmbedApiKeysString = window.localStorage.getItem('apolloStudioEmbeddedExplorerEncodedApiKey');\n\n      var _partialEmbedApiKeys = _partialEmbedApiKeysString ? JSON.parse(_partialEmbedApiKeysString) : {};\n\n      if (_partialEmbedApiKeys && _partialEmbedApiKeys[data.localStorageKey]) {\n        sendPostMessageToEmbed({\n          message: {\n            name: PARTIAL_AUTHENTICATION_TOKEN_RESPONSE,\n            partialToken: _partialEmbedApiKeys[data.localStorageKey]\n          },\n          embeddedIFrameElement: embeddedExplorerIFrameElement,\n          embedUrl: EMBEDDABLE_EXPLORER_URL\n        });\n      }\n    } // Embedded Explorer sends us a PM when it is ready for a schema\n\n\n    if ('name' in data && data.name === EXPLORER_LISTENING_FOR_SCHEMA && !!schema) {\n      updateSchemaInEmbed({\n        schema: schema\n      });\n    } // Check to see if the posted message indicates that the user is\n    // executing a query or mutation or subscription in the Explorer\n\n\n    var isQueryOrMutation = 'name' in data && data.name === EXPLORER_QUERY_MUTATION_REQUEST; // If the user is executing a query or mutation or subscription...\n\n    if (isQueryOrMutation && data.operation && data.operationId) {\n      // Extract the operation details from the event.data object\n      var operation = data.operation,\n          operationId = data.operationId,\n          operationName = data.operationName,\n          variables = data.variables,\n          headers = data.headers;\n\n      if (isQueryOrMutation) {\n        executeOperation({\n          endpointUrl: endpointUrl,\n          handleRequest: handleRequest,\n          operation: operation,\n          operationName: operationName,\n          variables: variables,\n          headers: headers,\n          embeddedIFrameElement: embeddedExplorerIFrameElement,\n          operationId: operationId,\n          embedUrl: EMBEDDABLE_EXPLORER_URL\n        });\n      }\n    }\n  }; // Execute our callback whenever window.postMessage is called\n\n\n  window.addEventListener('message', onPostMessageReceived);\n  return {\n    dispose: function dispose() {\n      return window.removeEventListener('message', onPostMessageReceived);\n    }\n  };\n}\n\nvar idCounter = 0;\n\nvar EmbeddedExplorer = /*#__PURE__*/function () {\n  function EmbeddedExplorer(options) {\n    var _this = this,\n        _this$options$handleR;\n\n    this.getEmbeddedExplorerURL = function () {\n      var _displayOptions$docsP, _displayOptions$theme;\n\n      var _ref = _this.options.initialState || {},\n          document = _ref.document,\n          variables = _ref.variables,\n          headers = _ref.headers,\n          displayOptions = _ref.displayOptions;\n\n      var persistExplorerState = _this.options.persistExplorerState;\n      var graphRef = 'graphRef' in _this.options ? _this.options.graphRef : undefined;\n      var queryParams = {\n        graphRef: graphRef,\n        document: document ? encodeURIComponent(document) : undefined,\n        variables: variables ? encodeURIComponent(JSON.stringify(variables)) : undefined,\n        headers: headers ? encodeURIComponent(JSON.stringify(headers)) : undefined,\n        shouldPersistState: !!persistExplorerState,\n        sendRequestsFrom: 'parent',\n        docsPanelState: (_displayOptions$docsP = displayOptions == null ? void 0 : displayOptions.docsPanelState) != null ? _displayOptions$docsP : 'open',\n        showHeadersAndEnvVars: (displayOptions == null ? void 0 : displayOptions.showHeadersAndEnvVars) !== false,\n        theme: (_displayOptions$theme = displayOptions == null ? void 0 : displayOptions.theme) != null ? _displayOptions$theme : 'dark'\n      };\n      var queryString = Object.entries(queryParams).filter(function (_ref2) {\n        var value = _ref2[1];\n        return value !== undefined;\n      }).map(function (_ref3) {\n        var key = _ref3[0],\n            value = _ref3[1];\n        return key + \"=\" + value;\n      }).join('&');\n      return EMBEDDABLE_EXPLORER_URL + \"?\" + queryString;\n    };\n\n    this.options = options;\n    this.validateOptions();\n    this.handleRequest = (_this$options$handleR = this.options.handleRequest) != null ? _this$options$handleR : fetch;\n    this.uniqueEmbedInstanceId = idCounter++;\n    this.embeddedExplorerURL = this.getEmbeddedExplorerURL();\n    this.embeddedExplorerIFrameElement = this.injectEmbed();\n    this.disposable = setupEmbedRelay({\n      embeddedExplorerIFrameElement: this.embeddedExplorerIFrameElement,\n      endpointUrl: this.options.endpointUrl,\n      handleRequest: this.handleRequest,\n      updateSchemaInEmbed: this.updateSchemaInEmbed.bind(this),\n      schema: 'schema' in this.options ? this.options.schema : undefined,\n      graphRef: 'graphRef' in this.options ? this.options.graphRef : undefined,\n      autoInviteOptions: this.options.autoInviteOptions\n    });\n  }\n\n  var _proto = EmbeddedExplorer.prototype;\n\n  _proto.dispose = function dispose() {\n    var _document$getElementB; // remove the dom element\n\n\n    (_document$getElementB = document.getElementById(IFRAME_DOM_ID(this.uniqueEmbedInstanceId))) == null ? void 0 : _document$getElementB.remove(); // remove the listener\n\n    this.disposable.dispose();\n  };\n\n  _proto.injectEmbed = function injectEmbed() {\n    var _element;\n\n    var element;\n    var target = this.options.target;\n\n    if (typeof target === 'string') {\n      var _document;\n\n      element = (_document = document) == null ? void 0 : _document.querySelector == null ? void 0 : _document.querySelector(target);\n    } else {\n      element = target;\n    }\n\n    var iframeElement = document.createElement('iframe');\n    iframeElement.src = this.embeddedExplorerURL;\n    iframeElement.id = IFRAME_DOM_ID(this.uniqueEmbedInstanceId);\n    iframeElement.setAttribute('style', 'height: 100%; width: 100%; border: none;');\n    (_element = element) == null ? void 0 : _element.appendChild(iframeElement);\n    return iframeElement;\n  };\n\n  _proto.validateOptions = function validateOptions() {\n    if (!this.options.target) {\n      throw new Error('\"target\" is required');\n    }\n\n    if (!this.options.handleRequest && !this.options.endpointUrl) {\n      throw new Error('`endpointUrl` is required unless you write a custom `handleRequest`');\n    }\n\n    if ('schema' in this.options && 'graphRef' in this.options) {\n      throw new Error('Both `schema` and `graphRef` cannot be set. You can either send your schema as an IntrospectionQuery or string via the `schema` field, or specifiy a public graphRef.');\n    }\n\n    if (!('schema' in this.options || 'graphRef' in this.options)) {\n      throw new Error('You must set either `schema` or `graphRef`.');\n    }\n  };\n\n  _proto.updateSchemaInEmbed = function updateSchemaInEmbed(_ref4) {\n    var schema = _ref4.schema;\n    sendPostMessageToEmbed({\n      message: {\n        name: SCHEMA_RESPONSE,\n        schema: schema\n      },\n      embeddedIFrameElement: this.embeddedExplorerIFrameElement,\n      embedUrl: EMBEDDABLE_EXPLORER_URL\n    });\n  };\n\n  return EmbeddedExplorer;\n}();\n\nfunction ApolloExplorerReact(props) {\n  var _useState = React.useState(),\n      wrapperElement = _useState[0],\n      setWrapperElement = _useState[1];\n\n  var currentEmbedRef = React.useRef();\n  useDeepCompareEffect(function () {\n    var _currentEmbedRef$curr;\n\n    if (!wrapperElement) return;\n    (_currentEmbedRef$curr = currentEmbedRef.current) == null ? void 0 : _currentEmbedRef$curr.dispose();\n    currentEmbedRef.current = new EmbeddedExplorer(_extends({}, props, {\n      target: wrapperElement\n    }));\n    return function () {\n      var _currentEmbedRef$curr2;\n\n      return (_currentEmbedRef$curr2 = currentEmbedRef.current) == null ? void 0 : _currentEmbedRef$curr2.dispose();\n    };\n  }, // we purposely exclude schema here\n  // when the schema changes we don't want to tear down and render a new embed,\n  // we just want to pm the new schema to the embed in the above useEffect\n  [props.endpointUrl, props.handleRequest, props.initialState, props.persistExplorerState, props.graphRef, wrapperElement]);\n  React.useEffect(function () {\n    var _currentEmbedRef$curr3;\n\n    if (props.schema) (_currentEmbedRef$curr3 = currentEmbedRef.current) == null ? void 0 : _currentEmbedRef$curr3.updateSchemaInEmbed({\n      schema: props.schema\n    });\n  }, [props.schema, currentEmbedRef.current]);\n  return React__default.createElement(\"div\", {\n    className: props.className,\n    ref: function ref(element) {\n      setWrapperElement(element);\n    }\n  });\n}\n\nexports.ApolloExplorer = EmbeddedExplorer;\nexports.ApolloExplorerReact = ApolloExplorerReact;","map":{"version":3,"mappings":"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","names":["EMBEDDABLE_EXPLORER_URL","EXPLORER_LISTENING_FOR_SCHEMA","SCHEMA_RESPONSE","EXPLORER_QUERY_MUTATION_REQUEST","EXPLORER_QUERY_MUTATION_RESPONSE","IFRAME_DOM_ID","uniqueId","EXPLORER_LISTENING_FOR_HANDSHAKE","HANDSHAKE_RESPONSE","SET_PARTIAL_AUTHENTICATION_TOKEN_FOR_PARENT","EXPLORER_LISTENING_FOR_PARTIAL_TOKEN","PARTIAL_AUTHENTICATION_TOKEN_RESPONSE","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","getHeadersWithContentType","headers","headersWithContentType","every","toLowerCase","sendPostMessageToEmbed","message","embeddedIFrameElement","embedUrl","contentWindow","postMessage","executeOperation","endpointUrl","handleRequest","operation","operationName","variables","operationId","body","JSON","stringify","query","response","_context","json","responseHeaders","status","stack","setupEmbedRelay","embeddedExplorerIFrameElement","updateSchemaInEmbed","schema","graphRef","autoInviteOptions","onPostMessageReceived","event","data","inviteToken","accountId","partialEmbedApiKeysString","window","localStorage","getItem","partialEmbedApiKeys","parse","localStorageKey","partialToken","setItem","isQueryOrMutation","addEventListener","dispose","removeEventListener","idCounter","EmbeddedExplorer","options","_this","initialState","document","displayOptions","persistExplorerState","queryParams","encodeURIComponent","shouldPersistState","sendRequestsFrom","docsPanelState","showHeadersAndEnvVars","theme","queryString","entries","filter","map","join","validateOptions","fetch","uniqueEmbedInstanceId","embeddedExplorerURL","getEmbeddedExplorerURL","injectEmbed","disposable","bind","_proto","getElementById","remove","element","target","_document","querySelector","iframeElement","createElement","src","id","setAttribute","appendChild","ApolloExplorerReact","props","useState","wrapperElement","setWrapperElement","currentEmbedRef","useRef","useDeepCompareEffect","current","_currentEmbedRef$curr2","useEffect","React","className","ref"],"sources":["/Users/william/Apollo/test/embed/node_modules/@apollo/explorer/src/helpers/constants.ts","/Users/william/Apollo/test/embed/node_modules/@apollo/explorer/node_modules/regenerator-runtime/runtime.js","/Users/william/Apollo/test/embed/node_modules/@apollo/explorer/src/helpers/postMessageRelayHelpers.ts","/Users/william/Apollo/test/embed/node_modules/@apollo/explorer/src/embeddedExplorer/setupEmbedRelay.ts","/Users/william/Apollo/test/embed/node_modules/@apollo/explorer/src/embeddedExplorer/EmbeddedExplorer.ts","/Users/william/Apollo/test/embed/node_modules/@apollo/explorer/src/embeddedExplorer/react/index.tsx"],"sourcesContent":["// URL for any embedded Explorer iframe\nexport const EMBEDDABLE_EXPLORER_URL =\n  'https://explorer.embed.apollographql.com';\nexport const EMBEDDABLE_SANDBOX_URL =\n  'https://sandbox.embed.apollographql.com/sandbox/explorer';\n\n// Message types for Explorer state\nexport const EXPLORER_LISTENING_FOR_SCHEMA = 'ExplorerListeningForSchema';\nexport const EXPLORER_LISTENING_FOR_STATE = 'ExplorerListeningForState';\nexport const SET_OPERATION = 'SetOperation';\nexport const SCHEMA_ERROR = 'SchemaError';\nexport const SCHEMA_RESPONSE = 'SchemaResponse';\n\n// Message types for queries and mutations\nexport const EXPLORER_QUERY_MUTATION_REQUEST = 'ExplorerRequest';\nexport const EXPLORER_QUERY_MUTATION_RESPONSE = 'ExplorerResponse';\n\n// Message types for subscriptions\nexport const EXPLORER_SUBSCRIPTION_REQUEST = 'ExplorerSubscriptionRequest';\nexport const EXPLORER_SUBSCRIPTION_RESPONSE = 'ExplorerSubscriptionResponse';\nexport const EXPLORER_SUBSCRIPTION_TERMINATION =\n  'ExplorerSubscriptionTermination';\nexport const IFRAME_DOM_ID = (uniqueId: number) => `apollo-embed-${uniqueId}`;\n\n// Message types for authentication\nexport const EXPLORER_LISTENING_FOR_HANDSHAKE = 'ExplorerListeningForHandshake';\nexport const HANDSHAKE_RESPONSE = 'HandshakeResponse';\nexport const SET_PARTIAL_AUTHENTICATION_TOKEN_FOR_PARENT =\n  'SetPartialAuthenticationTokenForParent';\nexport const EXPLORER_LISTENING_FOR_PARTIAL_TOKEN =\n  'ExplorerListeningForPartialToken';\nexport const PARTIAL_AUTHENTICATION_TOKEN_RESPONSE =\n  'PartialAuthenticationTokenResponse';\nexport const INTROSPECTION_QUERY_WITH_HEADERS = 'IntrospectionQueryWithHeaders';\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import type { GraphQLError, IntrospectionQuery } from 'graphql';\nimport {\n  PARTIAL_AUTHENTICATION_TOKEN_RESPONSE,\n  EMBEDDABLE_SANDBOX_URL,\n  EXPLORER_QUERY_MUTATION_RESPONSE,\n  HANDSHAKE_RESPONSE,\n  SCHEMA_ERROR,\n  SCHEMA_RESPONSE,\n} from './constants';\nimport type { JSONValue } from '../types';\n\nexport type HandleRequest = (\n  endpointUrl: string,\n  options: Omit<RequestInit, 'headers'> & { headers: Record<string, string> }\n) => Promise<Response>;\n\n// Helper function that adds content-type: application/json\n// to each request's headers if not present\nfunction getHeadersWithContentType(\n  headers: Record<string, string> | undefined\n) {\n  const headersWithContentType = headers ?? {};\n  if (\n    Object.keys(headersWithContentType).every(\n      (key) => key.toLowerCase() !== 'content-type'\n    )\n  ) {\n    headersWithContentType['content-type'] = 'application/json';\n  }\n  return headersWithContentType;\n}\n\nexport function sendPostMessageToEmbed({\n  message,\n  embeddedIFrameElement,\n  embedUrl,\n}: {\n  message: OutgoingEmbedMessage;\n  embeddedIFrameElement: HTMLIFrameElement;\n  embedUrl: string;\n}) {\n  embeddedIFrameElement?.contentWindow?.postMessage(message, embedUrl);\n}\n\ntype Error = {\n  message: string;\n  stack?: string;\n};\n\nexport type OutgoingEmbedMessage =\n  | {\n      name: typeof SCHEMA_ERROR;\n      error?: string;\n      errors?: Array<GraphQLError>;\n    }\n  | {\n      name: typeof SCHEMA_RESPONSE;\n      schema: IntrospectionQuery | string | undefined;\n    }\n  | {\n      name: typeof HANDSHAKE_RESPONSE;\n      graphRef?: string;\n      inviteToken?: string;\n      accountId?: string;\n    }\n  | {\n      name: typeof PARTIAL_AUTHENTICATION_TOKEN_RESPONSE;\n      partialToken?: string;\n    }\n  | {\n      name: typeof EXPLORER_QUERY_MUTATION_RESPONSE;\n      operationId: string;\n      response: {\n        data?: JSONValue;\n        error?: Error;\n        errors?: [Error];\n        status?: number;\n        headers?: Headers;\n      };\n    };\n\n// TODO(Maya) uncomment and switch to MessageEvent as a generic when tsdx supports Typescript V4.\n// https://github.com/jaredpalmer/tsdx/issues/926\nexport type IncomingEmbedMessage = MessageEvent;\n// | MessageEvent<{\n//     name: typeof EXPLORER_LISTENING_FOR_HANDSHAKE;\n//   }>\n// | MessageEvent<{\n//     name: typeof EXPLORER_QUERY_MUTATION_REQUEST;\n//     operationName?: string;\n//     operation: string;\n//     operationId: string;\n//     variables?: Record<string, string>;\n//     headers?: Record<string, string>;\n//     sandboxEndpointUrl?: string;\n//   }>\n// | MessageEvent<{\n//     name: typeof EXPLORER_LISTENING_FOR_SCHEMA;\n//   }>\n// | MessageEvent<{\n//     name: typeof SET_PARTIAL_AUTHENTICATION_TOKEN_FOR_PARENT;\n//     key: string;\n//     partialToken: string;\n//   }>\n// | MessageEvent<{\n//     name: typeof EXPLORER_LISTENING_FOR_PARTIAL_TOKEN;\n//     localStorageKey?: string;\n//   }>\n// | MessageEvent<{\n//     name: typeof INTROSPECTION_QUERY_WITH_HEADERS;\n//     introspectionRequestBody: string;\n//     introspectionRequestHeaders: Record<string, string>;\n//     sandboxEndpointUrl?: string;\n//   }>;\n\nexport function executeOperation({\n  endpointUrl,\n  handleRequest,\n  operation,\n  operationName,\n  variables,\n  headers,\n  embeddedIFrameElement,\n  operationId,\n  embedUrl,\n}: {\n  endpointUrl: string;\n  handleRequest: HandleRequest;\n  operation: string;\n  operationId: string;\n  embeddedIFrameElement: HTMLIFrameElement;\n  operationName: string | undefined;\n  variables?: Record<string, string>;\n  headers?: Record<string, string>;\n  embedUrl: string;\n}) {\n  return handleRequest(endpointUrl, {\n    method: 'POST',\n    headers: getHeadersWithContentType(headers),\n    body: JSON.stringify({\n      query: operation,\n      variables,\n      operationName,\n    }),\n  })\n    .then(async (response) => {\n      const json = await response.json();\n\n      const responseHeaders: Record<string, string> = {};\n      response.headers.forEach((value, key) => {\n        responseHeaders[key] = value;\n      });\n\n      sendPostMessageToEmbed({\n        message: {\n          // Include the same operation ID in the response message's name\n          // so the Explorer knows which operation it's associated with\n          name: EXPLORER_QUERY_MUTATION_RESPONSE,\n          operationId,\n          response: {\n            ...json,\n            status: response.status,\n            headers: responseHeaders,\n          },\n        },\n        embeddedIFrameElement,\n        embedUrl,\n      });\n    })\n    .catch((response) => {\n      sendPostMessageToEmbed({\n        message: {\n          // Include the same operation ID in the response message's name\n          // so the Explorer knows which operation it's associated with\n          name: EXPLORER_QUERY_MUTATION_RESPONSE,\n          operationId,\n          response: {\n            error: {\n              message: response.message,\n              ...(response.stack ? { stack: response.stack } : {}),\n            },\n          },\n        },\n        embeddedIFrameElement,\n        embedUrl,\n      });\n    });\n}\n\nexport function executeIntrospectionRequest({\n  endpointUrl,\n  headers,\n  introspectionRequestBody,\n  embeddedIFrameElement,\n}: {\n  endpointUrl: string;\n  embeddedIFrameElement: HTMLIFrameElement;\n  headers?: Record<string, string>;\n  introspectionRequestBody: string;\n}) {\n  const { query, operationName } = JSON.parse(introspectionRequestBody) as {\n    query: string;\n    operationName: string;\n  };\n  return fetch(endpointUrl, {\n    method: 'POST',\n    headers: getHeadersWithContentType(headers),\n    body: JSON.stringify({\n      query,\n      operationName,\n    }),\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      if (response.errors && response.errors.length) {\n        sendPostMessageToEmbed({\n          message: {\n            // Include the same operation ID in the response message's name\n            // so the Explorer knows which operation it's associated with\n            name: SCHEMA_ERROR,\n            errors: response.errors,\n          },\n          embeddedIFrameElement,\n          embedUrl: EMBEDDABLE_SANDBOX_URL,\n        });\n      }\n      sendPostMessageToEmbed({\n        message: {\n          // Include the same operation ID in the response message's name\n          // so the Explorer knows which operation it's associated with\n          name: SCHEMA_RESPONSE,\n          schema: response.data,\n        },\n        embeddedIFrameElement,\n        embedUrl: EMBEDDABLE_SANDBOX_URL,\n      });\n    })\n    .catch((error) => {\n      sendPostMessageToEmbed({\n        message: {\n          // Include the same operation ID in the response message's name\n          // so the Explorer knows which operation it's associated with\n          name: SCHEMA_ERROR,\n          error: error,\n        },\n        embeddedIFrameElement,\n        embedUrl: EMBEDDABLE_SANDBOX_URL,\n      });\n    });\n}\n","import type { IntrospectionQuery } from 'graphql';\nimport {\n  EMBEDDABLE_EXPLORER_URL,\n  SET_PARTIAL_AUTHENTICATION_TOKEN_FOR_PARENT,\n  EXPLORER_LISTENING_FOR_HANDSHAKE,\n  EXPLORER_LISTENING_FOR_SCHEMA,\n  EXPLORER_QUERY_MUTATION_REQUEST,\n  HANDSHAKE_RESPONSE,\n  EXPLORER_LISTENING_FOR_PARTIAL_TOKEN,\n  PARTIAL_AUTHENTICATION_TOKEN_RESPONSE,\n} from '../helpers/constants';\nimport {\n  executeOperation,\n  HandleRequest,\n  IncomingEmbedMessage,\n  sendPostMessageToEmbed,\n} from '../helpers/postMessageRelayHelpers';\n\nexport function setupEmbedRelay({\n  endpointUrl,\n  handleRequest,\n  embeddedExplorerIFrameElement,\n  updateSchemaInEmbed,\n  schema,\n  graphRef,\n  autoInviteOptions,\n}: {\n  endpointUrl: string;\n  handleRequest: HandleRequest;\n  embeddedExplorerIFrameElement: HTMLIFrameElement;\n  updateSchemaInEmbed: ({\n    schema,\n  }: {\n    schema: string | IntrospectionQuery | undefined;\n  }) => void;\n  schema?: string | IntrospectionQuery | undefined;\n  graphRef?: string | undefined;\n  autoInviteOptions?: {\n    accountId: string;\n    inviteToken: string;\n  };\n}) {\n  // Callback definition\n  const onPostMessageReceived = (event: IncomingEmbedMessage) => {\n    const data = event.data;\n    // When embed connects, send a handshake message\n    if (data.name === EXPLORER_LISTENING_FOR_HANDSHAKE) {\n      sendPostMessageToEmbed({\n        message: {\n          name: HANDSHAKE_RESPONSE,\n          graphRef,\n          inviteToken: autoInviteOptions?.inviteToken,\n          accountId: autoInviteOptions?.accountId,\n        },\n        embeddedIFrameElement: embeddedExplorerIFrameElement,\n        embedUrl: EMBEDDABLE_EXPLORER_URL,\n      });\n    }\n\n    // When the embed authenticates, save the partial token in local storage\n    if (data.name === SET_PARTIAL_AUTHENTICATION_TOKEN_FOR_PARENT) {\n      const partialEmbedApiKeysString = window.localStorage.getItem(\n        'apolloStudioEmbeddedExplorerEncodedApiKey'\n      );\n      const partialEmbedApiKeys = partialEmbedApiKeysString\n        ? JSON.parse(partialEmbedApiKeysString)\n        : {};\n      partialEmbedApiKeys[data.localStorageKey] = data.partialToken;\n      window.localStorage.setItem(\n        'apolloStudioEmbeddedExplorerEncodedApiKey',\n        JSON.stringify(partialEmbedApiKeys)\n      );\n    }\n\n    if (\n      data.name === EXPLORER_LISTENING_FOR_PARTIAL_TOKEN &&\n      data.localStorageKey\n    ) {\n      const partialEmbedApiKeysString = window.localStorage.getItem(\n        'apolloStudioEmbeddedExplorerEncodedApiKey'\n      );\n      const partialEmbedApiKeys = partialEmbedApiKeysString\n        ? JSON.parse(partialEmbedApiKeysString)\n        : {};\n      if (partialEmbedApiKeys && partialEmbedApiKeys[data.localStorageKey]) {\n        sendPostMessageToEmbed({\n          message: {\n            name: PARTIAL_AUTHENTICATION_TOKEN_RESPONSE,\n            partialToken: partialEmbedApiKeys[data.localStorageKey],\n          },\n          embeddedIFrameElement: embeddedExplorerIFrameElement,\n          embedUrl: EMBEDDABLE_EXPLORER_URL,\n        });\n      }\n    }\n\n    // Embedded Explorer sends us a PM when it is ready for a schema\n    if (\n      'name' in data &&\n      data.name === EXPLORER_LISTENING_FOR_SCHEMA &&\n      !!schema\n    ) {\n      updateSchemaInEmbed({ schema });\n    }\n\n    // Check to see if the posted message indicates that the user is\n    // executing a query or mutation or subscription in the Explorer\n    const isQueryOrMutation =\n      'name' in data && data.name === EXPLORER_QUERY_MUTATION_REQUEST;\n\n    // If the user is executing a query or mutation or subscription...\n    if (isQueryOrMutation && data.operation && data.operationId) {\n      // Extract the operation details from the event.data object\n      const { operation, operationId, operationName, variables, headers } =\n        data;\n      if (isQueryOrMutation) {\n        executeOperation({\n          endpointUrl,\n          handleRequest,\n          operation,\n          operationName,\n          variables,\n          headers,\n          embeddedIFrameElement: embeddedExplorerIFrameElement,\n          operationId,\n          embedUrl: EMBEDDABLE_EXPLORER_URL,\n        });\n      }\n    }\n  };\n  // Execute our callback whenever window.postMessage is called\n  window.addEventListener('message', onPostMessageReceived);\n  return {\n    dispose: () => window.removeEventListener('message', onPostMessageReceived),\n  };\n}\n","import type { IntrospectionQuery } from 'graphql';\nimport {\n  EMBEDDABLE_EXPLORER_URL,\n  IFRAME_DOM_ID,\n  SCHEMA_RESPONSE,\n} from '../helpers/constants';\nimport {\n  HandleRequest,\n  sendPostMessageToEmbed,\n} from '../helpers/postMessageRelayHelpers';\nimport { setupEmbedRelay } from './setupEmbedRelay';\n\nexport interface BaseEmbeddableExplorerOptions {\n  target: string | HTMLElement; // HTMLElement is to accomodate people who might prefer to pass in a ref\n\n  initialState?: {\n    document?: string;\n    variables?: Record<string, any>;\n    headers?: Record<string, string>;\n    displayOptions: {\n      docsPanelState?: 'open' | 'closed'; // default to 'open',\n      showHeadersAndEnvVars?: boolean; // default to `false`\n      theme?: 'dark' | 'light';\n    };\n  };\n  persistExplorerState?: boolean; // defaults to 'false'\n\n  endpointUrl: string;\n\n  // optional. defaults to `return fetch(url, fetchOptions)`\n  handleRequest?: HandleRequest;\n  // If this object has values for `inviteToken` and `accountId`,\n  // any users who can see your embeddable Explorer are automatically\n  // invited to the account your graph is under with the role specified by the `inviteToken`.\n  autoInviteOptions?: {\n    accountId: string;\n    inviteToken: string;\n  };\n}\n\ninterface EmbeddableExplorerOptionsWithSchema\n  extends BaseEmbeddableExplorerOptions {\n  schema: string | IntrospectionQuery;\n  graphRef?: never;\n}\n\ninterface EmbeddableExplorerOptionsWithGraphRef\n  extends BaseEmbeddableExplorerOptions {\n  graphRef: string;\n  schema?: never;\n}\n\nexport type EmbeddableExplorerOptions =\n  | EmbeddableExplorerOptionsWithSchema\n  | EmbeddableExplorerOptionsWithGraphRef;\n\nlet idCounter = 0;\n\nexport class EmbeddedExplorer {\n  options: EmbeddableExplorerOptions;\n  handleRequest: HandleRequest;\n  embeddedExplorerURL: string;\n  embeddedExplorerIFrameElement: HTMLIFrameElement;\n  uniqueEmbedInstanceId: number;\n  private disposable: { dispose: () => void };\n  constructor(options: EmbeddableExplorerOptions) {\n    this.options = options;\n    this.validateOptions();\n    this.handleRequest = this.options.handleRequest ?? fetch;\n    this.uniqueEmbedInstanceId = idCounter++;\n    this.embeddedExplorerURL = this.getEmbeddedExplorerURL();\n    this.embeddedExplorerIFrameElement = this.injectEmbed();\n    this.disposable = setupEmbedRelay({\n      embeddedExplorerIFrameElement: this.embeddedExplorerIFrameElement,\n      endpointUrl: this.options.endpointUrl,\n      handleRequest: this.handleRequest,\n      updateSchemaInEmbed: this.updateSchemaInEmbed.bind(this),\n      schema: 'schema' in this.options ? this.options.schema : undefined,\n      graphRef: 'graphRef' in this.options ? this.options.graphRef : undefined,\n      autoInviteOptions: this.options.autoInviteOptions,\n    });\n  }\n\n  dispose() {\n    // remove the dom element\n    document\n      .getElementById(IFRAME_DOM_ID(this.uniqueEmbedInstanceId))\n      ?.remove();\n    // remove the listener\n    this.disposable.dispose();\n  }\n\n  injectEmbed() {\n    let element;\n    const { target } = this.options;\n\n    if (typeof target === 'string') {\n      element = document?.querySelector?.(target);\n    } else {\n      element = target;\n    }\n    const iframeElement = document.createElement('iframe');\n    iframeElement.src = this.embeddedExplorerURL;\n\n    iframeElement.id = IFRAME_DOM_ID(this.uniqueEmbedInstanceId);\n    iframeElement.setAttribute(\n      'style',\n      'height: 100%; width: 100%; border: none;'\n    );\n\n    element?.appendChild(iframeElement);\n\n    return iframeElement;\n  }\n\n  validateOptions() {\n    if (!this.options.target) {\n      throw new Error('\"target\" is required');\n    }\n\n    if (!this.options.handleRequest && !this.options.endpointUrl) {\n      throw new Error(\n        '`endpointUrl` is required unless you write a custom `handleRequest`'\n      );\n    }\n\n    if ('schema' in this.options && 'graphRef' in this.options) {\n      throw new Error(\n        'Both `schema` and `graphRef` cannot be set. You can either send your schema as an IntrospectionQuery or string via the `schema` field, or specifiy a public graphRef.'\n      );\n    }\n\n    if (!('schema' in this.options || 'graphRef' in this.options)) {\n      throw new Error('You must set either `schema` or `graphRef`.');\n    }\n  }\n\n  getEmbeddedExplorerURL = () => {\n    const { document, variables, headers, displayOptions } =\n      this.options.initialState || {};\n    const { persistExplorerState } = this.options;\n    const graphRef =\n      'graphRef' in this.options ? this.options.graphRef : undefined;\n    const queryParams = {\n      graphRef,\n      document: document ? encodeURIComponent(document) : undefined,\n      variables: variables\n        ? encodeURIComponent(JSON.stringify(variables))\n        : undefined,\n      headers: headers\n        ? encodeURIComponent(JSON.stringify(headers))\n        : undefined,\n      shouldPersistState: !!persistExplorerState,\n      sendRequestsFrom: 'parent',\n      docsPanelState: displayOptions?.docsPanelState ?? 'open',\n      showHeadersAndEnvVars: displayOptions?.showHeadersAndEnvVars !== false,\n      theme: displayOptions?.theme ?? 'dark',\n    };\n\n    const queryString = Object.entries(queryParams)\n      .filter(([_, value]) => value !== undefined)\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&');\n    return `${EMBEDDABLE_EXPLORER_URL}?${queryString}`;\n  };\n\n  updateSchemaInEmbed({\n    schema,\n  }: {\n    schema?: string | IntrospectionQuery | undefined;\n  }) {\n    sendPostMessageToEmbed({\n      message: {\n        name: SCHEMA_RESPONSE,\n        schema,\n      },\n      embeddedIFrameElement: this.embeddedExplorerIFrameElement,\n      embedUrl: EMBEDDABLE_EXPLORER_URL,\n    });\n  }\n}\n","import type { IntrospectionQuery } from 'graphql';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  BaseEmbeddableExplorerOptions,\n  EmbeddedExplorer,\n} from '../EmbeddedExplorer';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\n// Need to extend from the base, b/c Omit<UnionType> doesn't carry over\n// the conditional never's established here\ninterface EmbeddableExplorerOptionsWithSchema\n  extends Omit<BaseEmbeddableExplorerOptions, 'target'> {\n  schema: string | IntrospectionQuery;\n  graphRef?: never;\n}\n\ninterface EmbeddableExplorerOptionsWithGraphRef\n  extends Omit<BaseEmbeddableExplorerOptions, 'target'> {\n  graphRef: string;\n  schema?: never;\n}\n\nexport type EmbeddableExplorerOptions =\n  | EmbeddableExplorerOptionsWithSchema\n  | EmbeddableExplorerOptionsWithGraphRef;\n\nexport function ApolloExplorerReact(\n  props: EmbeddableExplorerOptions & { className?: string }\n) {\n  const [wrapperElement, setWrapperElement] = useState<HTMLDivElement | null>();\n\n  const currentEmbedRef = useRef<EmbeddedExplorer>();\n\n  useDeepCompareEffect(\n    () => {\n      if (!wrapperElement) return;\n      currentEmbedRef.current?.dispose();\n\n      currentEmbedRef.current = new EmbeddedExplorer({\n        ...props,\n        target: wrapperElement,\n      });\n\n      return () => currentEmbedRef.current?.dispose();\n    },\n    // we purposely exclude schema here\n    // when the schema changes we don't want to tear down and render a new embed,\n    // we just want to pm the new schema to the embed in the above useEffect\n    [\n      props.endpointUrl,\n      props.handleRequest,\n      props.initialState,\n      props.persistExplorerState,\n      props.graphRef,\n      wrapperElement,\n    ]\n  );\n\n  useEffect(() => {\n    if (props.schema)\n      currentEmbedRef.current?.updateSchemaInEmbed({ schema: props.schema });\n  }, [props.schema, currentEmbedRef.current]);\n\n  return (\n    <div\n      className={props.className}\n      ref={(element) => {\n        setWrapperElement(element);\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"script"}